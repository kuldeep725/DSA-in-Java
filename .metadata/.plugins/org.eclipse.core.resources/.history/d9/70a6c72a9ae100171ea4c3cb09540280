import java.io.File;

import org.apache.commons.csv.CSVRecord;

import edu.duke.DirectoryResource;
import edu.duke.FileResource;


public class W5S1P {
	
	public void totalBirths (FileResource fr) {
		
		int noBoys = 0;
		int noGirls = 0;
		for (CSVRecord record : fr.getCSVParser(false)) {
			
			if (record.get(1).equals("M")) {
				noBoys++;
			}
			else {
				noGirls++;
			}
			
		}
		System.out.println("no. of boys = " + noBoys);
		System.out.println("no. of girls  = " + noGirls);
		System.out.println("total births = " + (noBoys + noGirls));
		
	}
	
	public int getRank​ (String name, String gender, int year) {
		
		FileResource fr = new FileResource("yob" + year + "short.csv");
		return findRank (name, gender, fr);
		
	}
	
	private int findRank(String name, String gender, FileResource fr) {
		
		int count  = 1;
		int noGirls = 0;
		int flag = 0;
		for (CSVRecord record : fr.getCSVParser(false)) {
			
			if (record.get(0).equals(name) && record.get(1).equals(gender)) {
				flag = 1;
				break;
			}
			
			if (record.get(1).equals("F")) {
				noGirls++;
			}
			count++;
			
		}
		if (flag == 0) return -1;
		
		else {
			if (gender.equals("F"))		return count;
			else  					return count - noGirls;
		}
		
	}

	public String getName (int year, int rank, String gender) {
		
		FileResource fr  = new FileResource("yob" + year + "short.csv");
		int girlCount = 0;
		int boyCount = 0;
		int count = 0;
		for (CSVRecord record : fr.getCSVParser(false)) {
			
			if (record.get(1).equals("M"))		{
				boyCount++;
				count = boyCount;
			}
			else 		{
				girlCount++;
				count = girlCount;
			}
			if (count == rank && gender.equals(record.get(1))) {
				return record.get(0);
			}
			
		}
		return "NO NAME";
		
	}
	public void whatIsNameInYear​ (String name, int year, int newYear, String gender){
		
		FileResource fr = new FileResource ("yob" + year + "short.csv");
		int rank = 1;
		int rankBoy = 0;
		int rankGirl = 0;
		for (CSVRecord record : fr.getCSVParser(false)) {
			
			if (record.get(1).equals("M")) {
				rankBoy++;
				rank = rankBoy;
			}
			else {
				rankGirl++;
				rank = rankGirl;
			}
			if  (record.get(0).equals(name) && record.get(1).equals(gender)) {
				break;
			}
			
		}
		System.out.println("rank = " + rank);
		System.out.println(getName (newYear, rank, gender));
		
	}
	
	public int yearOfHighestRank​ (String name, String gender) {
		
		DirectoryResource dr = new DirectoryResource();
		int minYear;
		int minRank = Integer.MAX_VALUE;
		int currentRank;
		String str = null;
		for (File f : dr.selectedFiles()) {
			
			FileResource fr = new FileResource(f);
			currentRank = findRank (name, gender, fr);
			if (minRank > currentRank) {
				minRank = currentRank;
				str = f.toString();
			}
			
		}
		if (str != null) {
			str = str.replaceAll("[^0-9]+", " ");
		}
		return minYear;
		
	}

}
